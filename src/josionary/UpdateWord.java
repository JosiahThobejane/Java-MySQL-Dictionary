package josionary;

/**
 *
 * @author Josiah
 */
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;

public class UpdateWord extends javax.swing.JFrame {

    /**
     * Creates new form UpdateWord
     */
    public UpdateWord() {
        initComponents();
        
        //run this before showing the window        
        Engine engine = new Engine();      
        DefaultListModel<String> listM = new DefaultListModel<>();
                       
        //retrieve words from the database and add them to the JList
        try 
        {
            PreparedStatement ps = engine.connection.prepareStatement("SELECT * FROM wordsdata ORDER BY Word ASC");
            
            ResultSet rs = ps.executeQuery();
            
            while(rs.next())
            {
                String word = rs.getString("Word");
               
                //add words to the list model
                listM.addElement(word);                
            }                         
        }
        catch(SQLException ee) {
            JOptionPane.showMessageDialog(null, ee.toString());
        }        
        
        //populate the JList with words from the database
        WordsTXT.setModel(listM);
        
        WordsTXT.addListSelectionListener((ListSelectionEvent event) -> {
        
            //if theres not action happening
            if(!event.getValueIsAdjusting())
                {
                    //retrieve the selected word description from the database                
                    try 
                    {                   
                        PreparedStatement ps = engine.connection.prepareStatement("SELECT WORD_DES FROM wordsdata WHERE Word='" + WordsTXT.getSelectedValue() + "'" );
                            
                        ResultSet result = ps.executeQuery(); 
                                            
                        while(result.next())
                        {                        
                            wordDescriptionTXT.setText(result.getString("WORD_DES"));                        
                        }                                          
                    }
                    
                    catch(SQLException ee) {
                        JOptionPane.showMessageDialog(null, ee.toString());
                    }       
                }
        
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        wordDescriptionTXT = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        WordsTXT = new javax.swing.JList<>();
        cancelBTN = new javax.swing.JButton();
        submitUpdateBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update Word - Josionary");
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        wordDescriptionTXT.setColumns(20);
        wordDescriptionTXT.setRows(5);
        jScrollPane1.setViewportView(wordDescriptionTXT);

        WordsTXT.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(WordsTXT);

        cancelBTN.setText("CANCEL");
        cancelBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBTNActionPerformed(evt);
            }
        });

        submitUpdateBTN.setText("SUBMIT UPDATE");
        submitUpdateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitUpdateBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 9, Short.MAX_VALUE)
                        .addComponent(submitUpdateBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(submitUpdateBTN)
                            .addComponent(cancelBTN))
                        .addGap(0, 4, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBTNActionPerformed
        //dispose the current open window - which will be the UpdateWord window
        this.dispose();
    }//GEN-LAST:event_cancelBTNActionPerformed

    //update the word selected when button is pressed
    private void submitUpdateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitUpdateBTNActionPerformed
        
        Engine engine = new Engine();
        
        try {
            PreparedStatement ps = engine.connection.prepareStatement("UPDATE wordsdata SET WORD_DES=? WHERE Word=?");
                
            ps.setString(1, wordDescriptionTXT.getText());
            ps.setString(2, WordsTXT.getSelectedValue());
                    
            //returns 1 when the database has been updated, 0 when it has not been updated
            switch(ps.executeUpdate())
            {
                case 1:
                    JOptionPane.showMessageDialog(null, "The word: " + WordsTXT.getSelectedValue() + " has been updated with a new description" );
                    break;
                case 0:
                    JOptionPane.showMessageDialog(null, "The word " + WordsTXT.getSelectedValue() + " has NOT been updated");
                    break;
            }
                
        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_submitUpdateBTNActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateWord().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> WordsTXT;
    private javax.swing.JButton cancelBTN;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton submitUpdateBTN;
    private javax.swing.JTextArea wordDescriptionTXT;
    // End of variables declaration//GEN-END:variables
}
